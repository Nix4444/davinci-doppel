generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id        String @id @default(uuid())
  username  String
  profilePicture String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Model{
  id   String @id @default(uuid())
  userId String
  name String
  type ModelTypeEnum
  age Int
  ethinicity EthinicityEnum
  eyeColor EyeColorEnum
  bald Boolean
  trainingImages TrainingImages[]
  outputImages OutputImages[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}
model TrainingImages{
  id String @id @default(uuid())
  imageUrl String
  modelId String
  model Model @relation(fields: [modelId],references: [id])
}

model OutputImages{
  id String @id @default(uuid())
  imageUrl String @default("")
  modelId String
  userId String
  prompt String
  status OutputImagesStatus @default(Pending)
  model Model @relation(fields: [modelId],references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
model Packs{
  id String @id @default(uuid())
  name String
  prompts PackPrompts[]
}

model PackPrompts{
  id String @id @default(uuid())
  prompt String
  packId String
  pack Packs @relation(fields: [packId],references: [id])

}

enum OutputImagesStatus{
  Pending
  Generated
  Failed
}
enum ModelTypeEnum{
  Man
  Woman
  Others
}
enum EthinicityEnum{
  White
  Black
  AsianAmerican  @map("Asian American")
  EastAsian      @map("East Asian")
  SouthEastAsian @map("South East Asian")
  SouthAsian     @map("South Asian")
  MiddleEastern  @map("Middle Eastern")
  Pacific
  Hispanic
}

enum EyeColorEnum{
  Black
  Brown
  Hazel
  Gray
  Blue
  Green
}